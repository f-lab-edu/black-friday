# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]

jobs:
  Deploy:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Gradle 권한 부여
    - name: Grant permission for gradlew
      run: chmod +x ./gradlew

    # 테스트 및 빌드
    - name: Build with Gradle
      run: ./gradlew clean bootJar
      
    - run: ls
    - run: ls build
    - run: ls build/libs


    - name: Docker build
      uses: docker/build-push-action@v3.2.0
      with:
          context: .
          file: ./Dockerfile
          push: false
          tags: blackfriday:latest
    - run: /usr/bin/docker save -o blackfriday.tar blackfriday:latest

      # tar 파일 권한 수정
    - name: Set permission for tar file
      run: chmod 664 blackfriday.tar

    - name: Send docker image file to test server
      uses: appleboy/scp-action@master
      with:
        host: "210.89.190.40"
        username: ${{ secrets.POSTOFFICE_NAME }}
        password : ${{ secrets.POSTOFFICE_PASS }}
        port: 7022
        source: "blackfriday.tar"
        target: "/home/blackfriday/versions"

    - name: Set permission for tar file on server
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      with:
         host: "210.89.190.40"
         user: ${{ secrets.POSTOFFICE_NAME }}
         pass: ${{ secrets.POSTOFFICE_PASS }}
         port: 7022
         first_ssh: |
           chmod 644 /home/blackfriday/versions/blackfriday.tar

    - name: Bootup server
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      with:
        host: "210.89.190.40"
        user: ${{ secrets.POSTOFFICE_NAME }} 
        pass: ${{ secrets.POSTOFFICE_PASS }}
        port: 7022
        connect_timeout: 120s
        first_ssh: |
          docker stop blackfriday || true;
          docker rm blackfriday || true;
          docker image rm blackfriday:latest || true;
          

    - name: Load versions to image
      run : sshpass -p ${{ secrets.POSTOFFICE_PASS }} ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=60 -T -p 7022 ${{ secrets.POSTOFFICE_NAME }}@210.89.190.40 "
          docker load -i /home/blackfriday/versions/blackfriday.tar;
        "
          
    - name: Run Docker container on server
      uses: cross-the-world/ssh-scp-ssh-pipelines@latest
      with:
          host: "210.89.190.40"
          user: ${{ secrets.POSTOFFICE_NAME }}
          pass: ${{ secrets.POSTOFFICE_PASS }}
          port: 7022
          connect_timeout: 120s
          first_ssh: |
            docker run -d -p 32468:8080 --name blackfriday -e SPRING_PROFILES_ACTIVE=nCloud --network docker_blackfriday-net blackfriday:latest;
